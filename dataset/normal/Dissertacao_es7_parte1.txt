Com a crescente demanda de software e a conseqüente evolução da Engenharia de Software, atividades agregadas sob o nome de Garantia de Qualidade de Software têm sido introduzidas ao longo de todo o processo de desenvolvimento, entre elas as atividades de VV&T (Verificação, Validação e Teste), com o intuito de auxiliar na melhoria da qualidade e da produtividade.
As atividades de teste envolvem basicamente quatro etapas: planejamento de testes, projeto de casos de teste, execução e avaliação dos resultados. Essas atividades são realizadas em três diferentes níveis: nível de unidade, nível de integração e nível de sistema. Geralmente, os critérios de teste de software são estabelecidos a partir de três técnicas: funcional, estrutural e baseada em erros. Cada uma dessas técnicas estabelece os requisitos de teste a partir de diferentes aspectos do software. A técnica funcional estabelece os requisitos de teste a partir da especificação do programa. A técnica estrutural estabelece os requisitos a partir da implementação do programa, enquanto que a técnica baseada em erros estabelece os requisitos de teste a partir de erros típicos cometidos no processo de desenvolvimento de software. Independentemente da técnica utilizada, um ponto importante que se considera em diversos estudos empíricos é a redução dos custos aplicados às atividades de teste. Além da redução dos custos, a eficácia também é um dos aspectos fundamentais bastante investigado. 
Observa-se que o conjunto de informações oriundas das atividades de teste pode ser utilizado no contexto das atividades de depuração, estimativa de confiabilidade e de manutenção (evolução) de software.
Independentemente da qualidade da concepção, desenvolvimento e teste do sistema antes de ter sido liberado, o produto de software irá certamente ser modificado por diversas razões, por exemplo, para atender às mudanças nas especificações e expectativas dos usuários. Assim, a fase de manutenção é a etapa do ciclo de vida do software na qual são efetuadas alterações no produto após sua liberação para o usuário. Qualquer que seja o tipo de manutenção - corretiva, evolutiva, adaptativa ou preventiva - algumas tarefas comuns devem ser efetuadas: o entendimento, a modificação e a revalidação do software. Durante a etapa de revalidação deve-se demonstrar que não somente a nova lógica está correta, mas também que as partes do software que não foram modificadas permanecem intactas e o software como um todo ainda funciona corretamente.
A atividade de teste da evolução do sistema é geralmente denominada de teste de regressão e visa a fornecer evidências de que as mudanças ocorridas não afetam adversamente as características previamente existentes, assim como a evidenciar que as eventuais novas funcionalidades estão de acordo com as expectativas do usuário, ou seja, visa a dar evidências de que o software funciona corretamente após a modificação. A principal diferença entre o teste de regressão e os testes realizados durante o desenvolvimento do software é que durante o teste de regressão pode-se ter, de antemão, um conjunto de casos de teste disponível para reutilização. Esse conjunto contribui para verificar se novos erros não foram introduzidos com as modificações realizadas.
Recentemente, diversos estudos têm sido realizados abordando o teste de regressão de software. Leung e White identificam duas abordagens para o teste de regressão: retestar-tudo (retest-all) e seletiva. Na abordagem retest-all todos os casos de teste utilizados durante a fase de desenvolvimento são empregados. Na abordagem seletiva um subconjunto de casos de teste é selecionado a partir do conjunto original identificando partes do programa modificado que devem ser testadas. Ainda, segundo Leung e White, as técnicas de teste de regressão devem ser aplicadas a um baixo custo sem que sua eficácia seja comprometida. Considerando essas duas abordagens, diversas técnicas de teste de regressão têm sido propostas na literatura. Essas técnicas e diversas outras existentes na literatura contribuem para a redução dos custos e esforços que são aplicados durante a realização das atividades de teste de regressão.
Muitas das técnicas de teste de regressão utilizam mecanismos, técnicas e critérios oriundos da atividade de teste de software realizada durante o processo de desenvolvimento. São exemplos dessas técnicas: Técnica baseada em Fluxo de Dados e Técnica baseada em Mutação Seletiva. Outros exemplos de técnicas de teste de regressão são: Técnica baseada em Execução Simbólica, Técnica baseada em Domínio, Técnica baseada em Modificação, Técnica baseada na Cobertura dos Critérios Potenciais-Usos.
A importância de se reduzir o tamanho do conjunto de casos de teste de regressão e de aumentar a eficácia da detecção de defeitos em programas modificados é ressaltada por Harrold e Wong et al. Em estudos empíricos realizados por Wong et al uma técnica híbrida que combina minimização e seleção baseada em prioridade é proposta. Basicamente, essa técnica identifica um subconjunto representativo de todos os casos de teste que resultam em diferentes comportamentos no programa modificado.
Além da técnica híbrida, Wong et al propõem uma técnica para minimização dos custos da aplicação dos testes de regressão. Basicamente, a técnica utiliza mutação seletiva por meio de um conjunto de operadores de mutação 1, visando a encontrar um conjunto minimizado de casos de teste a ser aplicado durante os testes de regressão. Nessa técnica, a característica mais importante é examinar como um critério de teste pode ser utilizado no teste de regressão a fim de ajudar os testadores a determinar quais casos de teste devem ser selecionados ou ter uma maior prioridade para o processo de revalidação das novas funcionalidades.
Diante dessa diversidade de técnicas, Rothermel e Harrold definiram um framework que estabelece características para a comparação e avaliação de técnicas seletivas. Além desse framework, Leung e White definiram um modelo de custo que compara os custos gastos em aplicar as abordagens de teste de regressão retest-all e seletiva. Tanto o framework quanto o modelo de custo auxiliam testadores a decidir qual abordagem e qual técnica de teste de regressão utilizar. Assim, este trabalho está inserido no contexto de estudos empíricos para contribuir na análise, comparação e escolha de técnicas de teste de regressão utilizando o framework definido por Rothermel e Harrold.