O desenvolvimento de sistemas a partir "do zero" é, na maioria das vezes, mais difícil do que quando existe algo pronto para ser usado como base. Por exemplo, em muitos sistemas de informação pode­se aproveitar a estrutura geral de um programa existente, os módulos para montagem de menus, relatórios, consultas e a estrutura de inserção, alteração e eliminação de dados. Esse aproveitamento pode ser maior ou menor de acordo com o tipo de aplicação a ser desenvolvida e de acordo com os sistemas prontos disponíveis. Ao longo de alguns anos de trabalho pode­se acumular inúmeros módulos, que podem servir como base para elaboração de novos sistemas. Desenvolver sistemas dessa forma tem seus problemas: na ânsia de aproveitar algo já pronto, muitas vezes o sistema resultante não fica tão eficiente; existe a tendência de colar "remendo sobre remendo", produzindo sistemas difíceis de manter; as alterações feitas são tantas que não resta nada do sistema original (nesse caso, talvez tivesse sido melhor partir "do zero"); é também difícil saber qual dos sistemas prontos seria a melhor base para o novo sistema, devido à falta de rigor na documentação. 
Além desse aproveitamento puramente de código, seria desejável aproveitar soluções de análise e projeto, que exigiram bastante esforço para serem elaboradas e poderiam ser reutilizadas em novos desenvolvimentos. Essas soluções poderiam ser sintetizadas em "padrões", sejam eles de análise, de projeto ou de código. Para criar esses padrões nada mais natural do que investigar sistemas prontos, em busca de trechos de código que representem soluções para determinados problemas e que possam ser reutilizados no futuro. Deve­se estudar, então, uma forma de documentar esses padrões, disponibilizando­os a quem possa interessar. 
Padrões de software podem se referir a diferentes níveis de abstração no desenvolvimento de sistemas orientados a objetos. Assim pode­se ter desde padrões de análise, em que esse nível é bastante alto, passando por padrões de projeto e indo até padrões de código. Coad apresenta padrões de análise bem gerais, úteis principalmente no desenvolvimento de sistemas de informação na área empresarial. Gamma apresenta padrões de projeto de utilização bastante ampla que abrange sistemas os mais diversos, para várias áreas de aplicação. Fowler discute padrões de análise específicos para as áreas de contabilidade, observações e medidas, finanças empresariais, referenciação de objetos, controle de estoque, planejamento, comercialização de bens, negociação em bolsas de valores e negociação de lotes de papéis, entre outros.