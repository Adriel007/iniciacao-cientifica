Diante da constante necessidade de algum suporte de versão de arquivos para equipes que trabalham em um desenvolvimento colaborativo de informações baseadas em computador, diversos estudos têm sido realizados há vários anos. O primeiro uso desse suporte foi em sistemas de gerenciamento de versão como o SCCS (Source Code Control System) e o RCS (Revision Control System) (esses sistemas serão descritos com mais detalhes no Capítulo 2) para desenvolvimento de software. Os objetivos principais desses sistemas foram reduzir os requisitos de armazenamento para múltiplas versões de software e controlar o trabalho cooperativo entre os autores de forma que nenhum sobrescrevesse a cópia do outro. 
Esses sistemas evoluíram em vários outros sistemas mais sofisticados como ClearCASE e Adele que dão suporte ao controle de processo, porém nem todos os desenvolvedores de software precisam de sistemas sofisticados. Muitos deles precisam apenas de sistemas que gerenciem as versões que são geradas dos arquivos para que não haja perda ou sobreposição de informações. O RCS e o SCCS satisfazem a essas necessidades de forma eficiente. 
O processo de mudança é uma realidade que ocorre durante todo o ciclo de vida de um software. Como as organizações solicitam as mudanças de forma muito aleatória, todas as mudanças feitas devem ser registradas e efetuadas no sistema a um custo razoável, daí surge a necessidade delas serem gerenciadas.
No contexto de software, o processo de gerenciamento de mudanças tem efeito quando o software e a documentação associada são colocados sob o controle de gerenciamento de configuração de software (SCM - Software Configuration Management). Durante o desenvolvimento de um software de grande escala, alterações descontroladas levam rapidamente ao caos, portanto, os procedimentos de gerenciamento de mudanças devem ser realizados para garantir que seus custos e benefícios sejam analisados e que as mudanças sejam feitas de forma controlada. O controle de mudanças combina procedimentos humanos e ferramentas automatizadas para proporcionar um mecanismo eficiente de controle das alterações.
O controle de versão pode ser definido como o processo de organização, coordenação e gerenciamento de objetos em evolução. Em muitas áreas de aplicação, o processo de evolução do objeto pode ser caracterizado como uma série de refinamentos incrementais. Por exemplo, os desenvolvedores de software freqüentemente fazem mudanças em módulos de software quando erros são detectados, e os clientes raramente ficam satisfeitos com a primeira versão fazendo, então, com que várias revisões sejam produzidas antes de produzir uma versão final. Em cada um desses casos, objetos em desenvolvimento são alterados e atualizados de forma a produzir o próximo refinamento no processo evolucionário. 
Uma versão de um sistema é uma instância que difere, de algum modo, de outras instâncias. Outras ferramentas de apoio ao controle de versões que são exemplos dessa abordagem, além do SCCS, RCS, ClearCASE e Adele, são aquelas que dão suporte, na forma de sistemas de gerenciamento de versão de arquivos, tais como: o CVS (Concurrent Versions System), COV, ICE entre outras. 
Um sistema de controle de versão pode permitir o trabalho paralelo entre os desenvolvedores, exibir as diferenças entre várias versões subseqüentes de um artefato, recuperar versões anteriores e localizar modificações de um mesmo documento feitas por desenvolvedores diferentes.