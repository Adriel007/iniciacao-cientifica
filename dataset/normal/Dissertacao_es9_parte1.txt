A Engenharia de Software busca estabelecer e aplicar os princípios de engenharia, objetivando produzir sistemas confiáveis com baixo custo e com alta qualidade. O processo de Engenharia de Software compreende três fases genéricas: Definição, Desenvolvimento e Manutenção. 
A atividade de manutenção de software é reconhecidamente uma fase problemática e esses problemas são causadores de custos substanciais quando comparados com os custos das outras fases do ciclo de vida do sistema. Essa superior proporção de recursos despendidos com a manutenção é muito comentada na literatura. 
Por maiores que sejam os problemas, e por mais sofisticado que seja o sistema ou a instalação onde ele é processado, a atividade de manutenção não pode ser evitada. Correções de erros não identificados na fase de testes, adaptações a novas plataformas, e atualizações de funcionalidade do sistema sempre ocorrerão.
A atividade de manutenção compreende as etapas: Entendimento, Modificação e Revalidação do sistema. Estudos realizados por Corbi indicam que mais da metade do tempo dos profissionais de manutenção é dedicado ao entendimento do sistema. Esse autor ressalta que para modificar um sistema os programadores tornam-se parte historiadores, parte detetives, e parte clarividentes.
Outros estudos que buscaram identificar os fatores que fazem com que a manutenção se torne mais difícil e tão onerosa mostraram que um dos fatores principais é a inexistência ou a não completitude e/ou desatualização da documentação do sistema. 
Assim sendo, pode-se observar que a facilidade de manutenção (manutenibilidade), caracterizada principalmente pelo entendimento do sistema, está fortemente relacionada à disponibilidade de informações sobre o sistema. Essas informações podem ser documentadas durante o desenvolvimento do sistema, no entanto, na maioria das vezes a documentação é inexistente, incompleta e/ou desatualizada.
A inexistência ou a desatualização de documentação são devidas, principalmente, a duas situações: sistema antigo, desenvolvido em uma época onde a maior preocupação tecnológica era o espaço de armazenamento e nenhum cuidado era tomado com relação às alterações efetuadas; ou sistema mais recente desenvolvido utilizando um método de engenharia de software, porém sem nenhuma preocupação com a documentação referente a cada fase do ciclo de vida, principalmente com as alterações nela efetuadas.
Nesse sentido, a Engenharia Reversa tem por objetivo principal recuperar informações, através da produção de visões do sistema, as quais podem facilitar, primeiramente, o entendimento e, posteriormente, a modificação e revalidação do sistema, aumentando assim a manutenibilidade do mesmo. Principalmente, para o propósito de entendimento, as visões recuperadas através de técnicas de Engenharia Reversa, devem ser compreensíveis, simples e bem definidas.
Penteado et al apresentam um método de Engenharia Reversa, o FUSION/RE, o qual, a partir de sistemas implementados usando tecnologia não orientada a objetos, cria os modelos de análise do método de desenvolvimento orientado a objetos denominado FUSION. Os modelos FUSION fornecem uma forma de representar os requisitos do sistema, de forma completa, consistente, não ambígua, apresentando visões dos conceitos existentes no domínio do problema, das seqüências permitidas de operações e eventos do sistema e do comportamento das operações do sistema, fáceis de serem entendidas. 
Nesse sentido, pelas características apresentadas pelos modelos FUSION, esses atingem o objetivo de interesse que é o de produzir visões compreensíveis, simples e bem definidas, para facilitar o entendimento do sistema.