As expectativas de qualidade de produtos de software têm aumentado cada vez mais, enquanto restrições de custo e recursos humanos estão diminuindo. Muitas empresas têm incorporado tecnologia orientada a objetos no seu processo de desenvolvimento de software com a perspectiva de aprimorar a qualidade dos produtos de software. Com a crescente aceitação da orientação a objetos, o número de pesquisas sobre a abordagem orientada a objetos aumentou. Surgiram então muitos métodos de análise e projeto e muitas linguagens de programação que apóiam essa abordagem. 
Cada um dos vários métodos que apóiam o ciclo de vida do software orientado a objetos propõe os seus modelos e o seu processo de desenvolvimento. Em cada fase desse processo são gerados modelos (diagramáticos ou textuais) que visam a representar os requisitos do software naquela fase. Porém, com essa diversidade de métodos não existe um padrão de modelos para as atividades do desenvolvimento de software. Com o objetivo de padronizar a notação dos modelos utilizados ao longo do desenvolvimento de software Jacobson, Rumbaugh e Booch desenvolveram a Unified Modeling Language (UML). A UML é uma linguagem de modelagem orientada a objetos que não estabelece um padrão de processo de desenvolvimento. Dessa forma, organizações e projetos que se enquadram em diferentes processos de desenvolvimento podem utilizar a mesma notação para os seus modelos. 
No entanto, para que um produto de software atinja um grau de qualidade aceitável, são necessárias atividades de garantia de qualidade, tais como verificação e validação, sendo a atividade de teste uma das mais utilizadas, constituindo-se em um dos elementos para fornecer evidências da confiabilidade do software em complemento a outras atividades. Porém, no contexto de orientação a objetos, tem sido identificada a necessidade de novas técnicas e ferramentas que apoiem a atividade de teste de software e várias iniciativas e esforços de pesquisadores têm sido feitas nessa direção.