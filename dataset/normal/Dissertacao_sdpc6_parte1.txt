Os Sistemas Computacionais Distribuídos, há mais de uma década, já deixaram de ser apenas uma promessa, não estando mais restritos a pesquisas realizadas nos meios acadêmicos. Hoje, com um maior ou menor grau de conformidade em relação àquilo que se considera "distribuído", já há vários exemplos bem-sucedidos de implementações e o número e a diversidade das aplicações distribuídas não pára de crescer, abrangendo ambientes tão diversos como o meio acadêmico, comércio, indústria e residências. 
Contudo, a construção de aplicações distribuídas impõe novos desafios aos programadores, pela diversidade dos ambientes computacionais envolvidos, pela necessidade de troca de mensagens através da rede e devido à própria compreensão do que vem a ser uma aplicação distribuída. Sendo assim, é importante que existam boas ferramentas de apoio à construção dessas aplicações, procurando-se tornar seu trabalho de implementação semelhante ao das aplicações centralizadas, cuja técnica já é amplamente conhecida e dominada pela maioria dos usuários (programadores). 
Analisando-se o cenário das implementações bem-sucedidas de aplicações distribuídas, vê-se que o modelo dominante é o paradigma cliente-servidor, em que os usuários interagem com aplicações que podem ser clientes de outros serviços disponíveis no sistema e cada serviço provê uma série de funções que podem ser invocadas pelos clientes. A comunicação entre clientes e servidores se dá por meio de um mecanismo de passagem de mensagens, particularmente através do mecanismo de RPCs (Remote Procedure Calls), que tenta esconder dos programadores a complexidade da comunicação através da rede e a diversidade dos ambientes computacionais envolvidos, procurando fazer com que a chamada remota seja o mais semelhante possível às chamadas locais convencionais. 
O núcleo de um sistema de RPC é o gerador de stubs, que automatiza a criação dos módulos de comunicação entre cliente e servidor, devendo esta ser o mais transparente possível aos usuários do sistema, por ser justamente neste ponto que reside a maior dificuldade da RPC e ser também um dos fatores de distanciamento entre as chamadas remotas e as locais. Assim, a existência de um gerador automático de stubs é sempre atrativa. 
Tais geradores estão disponíveis em diversos ambientes, com graus de transparência variados, como, por exemplo, UNIX (SUN rpcgen) e MS-DOS, sendo de grande interesse tê-los também para Windows, particularmente para o Windows 95, a fim de que se possa implementar aplicações distribuídas nesse ambiente.